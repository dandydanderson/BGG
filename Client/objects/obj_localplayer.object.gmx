<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_herofront</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = "idle";
facing = 0;
maxhp = 10;
hp = maxhp;
maxmp = 10;
mp = maxmp;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_execute(scr_lighting);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//some basic player movement
depth = -y;


var xx, yy, d;
// movement
if (keyboard_check(vk_left) &amp;&amp; place_free(x - 9, y)) &amp;&amp; sprite_index = spr_heroleft {
x -= 3;
state = "movement"

}

if (keyboard_check(vk_right) &amp;&amp; place_free(x + 9, y)) &amp;&amp; sprite_index = spr_heroright {
x += 3;
state = "movement"
}

if (keyboard_check(vk_up) &amp;&amp; place_free(x , y - 10)) &amp;&amp; sprite_index = spr_heroback {
y -= 3;
state = "movement"
}

if (keyboard_check(vk_down) &amp;&amp; place_free(x, y +10)) &amp;&amp; sprite_index = spr_herofront {
y += 3;
state = "movement"
}
if (x = xprevious &amp;&amp; y = yprevious) {state = "idle"}
if (state = "idle") {image_index = 0;}
//sprite control

//downward movment
if (keyboard_check_pressed(vk_down)) 
{sprite_index = spr_herofront;
 image_speed = .2;
 image_index = -1;
 facing = 3;
 
}

// upward movment
if (keyboard_check_pressed(vk_up)) 
{sprite_index = spr_heroback;
 image_speed = .2;
 image_index = -1;
 facing = 1;
 
}

// left movment

if (keyboard_check_pressed(vk_left)) 
{sprite_index = spr_heroleft;
 image_speed = .2;
 image_index = -1;
 facing = 2;
 
}

// right movment

if (keyboard_check_pressed(vk_right)) 
{sprite_index = spr_heroright;
 image_speed = .2;
 image_index = -1;
 facing = 3;
 
}





if (hp &lt;= 0){
hp = 0;
x = xprevious;
y = yprevious;
}
//update coordinates
buffer_seek(global.buffer, buffer_seek_start, 0);
buffer_write(global.buffer, buffer_u8, 7);
buffer_write(global.buffer, buffer_u32, global.playerId);
buffer_write(global.buffer, buffer_f32, x);
buffer_write(global.buffer, buffer_f32, y);
network_send_packet(obj_controller.socket, global.buffer, buffer_tell(global.buffer));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//tell the server we're leaving the game room
buffer_seek(global.buffer, buffer_seek_start, 0);//seek to the beginning of the read buffer
buffer_write(global.buffer, buffer_u8, 6);//write a tag to the global write buffer
buffer_write(global.buffer, buffer_u32, global.playerId);
network_send_packet(obj_controller.socket, global.buffer, buffer_tell(global.buffer));

room_goto(rm_mainMenu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
